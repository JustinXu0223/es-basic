{"version":3,"sources":["01-array-from.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY;AACZ,SAAK,GADO;AAEZ,SAAK,GAFO;AAGZ,SAAK,GAHO;AAIZ,YAAQ;AAJI,CAAhB;AAMA;AACA;;AAEA;AACA,IAAM,SAAS,MAAM,IAAN,CAAW,SAAX,CAAf;AACA,QAAQ,KAAR,CAAc,MAAd;;AAEA,IAAI,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;AACA,IAAI,OAAO,MAAM,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX,CAAX;AACA,QAAQ,GAAR,CAAY,MAAM,OAAN,CAAc,IAAd,CAAZ,E,CAAkC;AAClC,QAAQ,GAAR,CAAY,QAAQ,IAApB,E,CAA2B;AAC3B,QAAQ,GAAR,CAAY,IAAZ,E,CAAmB","file":"01-array-from-compiled.js","sourcesContent":["let arrayLike = {\r\n    '0': 'a',\r\n    '1': 'b',\r\n    '2': 'c',\r\n    length: 3\r\n};\r\n// ES5 使用数组原型的slice方法返回新数组\r\n//const newArr = Array.prototype.slice.call(arrayLike);\r\n\r\n// ES6 直接通过from\r\nconst newArr = Array.from(arrayLike);\r\nconsole.error(newArr);\r\n\r\nlet arr = [1, 2, 3];\r\nlet arr1 = Array.from([1, 2, 3]);\r\nconsole.log(Array.isArray(arr1)); // true\r\nconsole.log(arr === arr1); // false\r\nconsole.log(arr1); // // [1, 2, 3])\r\n\r\n"]}